{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT-PROJECTS\\\\somnus\\\\src\\\\components\\\\posts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Post from './post';\nimport './posts.css';\nimport avatar_1 from './avatar_1.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const temporaryData = [{\n      id: 1,\n      avatar: 'https://example.com/avatar1.jpg',\n      username: 'user1',\n      date: '2023-05-01',\n      text: 'Текст поста 1',\n      likes: 10,\n      comments: 5\n    }, {\n      id: 2,\n      avatar: 'https://example.com/avatar1.jpg',\n      username: 'user2',\n      date: '2023-05-02',\n      text: 'Текст поста 2',\n      likes: 5,\n      comments: 2\n    }, {\n      id: 3,\n      avatar: 'https://example.com/avatar1.jpg',\n      username: 'user3',\n      date: '2023-05-03',\n      text: 'Текст поста 3',\n      likes: 3,\n      comments: 1\n    }];\n    setPosts(temporaryData);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        avatar: post.avatar,\n        username: post.username,\n        date: post.date,\n        text: post.text,\n        likes: post.likes,\n        comments: post.comments\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","Post","avatar_1","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","temporaryData","id","avatar","username","date","text","likes","comments","className","children","map","post","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/REACT-PROJECTS/somnus/src/components/posts.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Post from './post';\r\nimport './posts.css';\r\nimport avatar_1 from './avatar_1.jpg';\r\n\r\nconst Posts = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    const temporaryData = [\r\n      {\r\n        id: 1,\r\n        avatar: 'https://example.com/avatar1.jpg',\r\n        username: 'user1',\r\n        date: '2023-05-01',\r\n        text: 'Текст поста 1',\r\n        likes: 10,\r\n        comments: 5\r\n      },\r\n      {\r\n        id: 2,\r\n        avatar: 'https://example.com/avatar1.jpg',\r\n        username: 'user2',\r\n        date: '2023-05-02',\r\n        text: 'Текст поста 2',\r\n        likes: 5,\r\n        comments: 2\r\n      },\r\n      {\r\n        id: 3,\r\n        avatar: 'https://example.com/avatar1.jpg',\r\n        username: 'user3',\r\n        date: '2023-05-03',\r\n        text: 'Текст поста 3',\r\n        likes: 3,\r\n        comments: 1\r\n      }\r\n    ];\r\n\r\n    setPosts(temporaryData);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"posts-container\">\r\n      <div className=\"posts\">\r\n        {posts.map(post => (\r\n          <Post\r\n            key={post.id}\r\n            avatar={post.avatar}\r\n            username={post.username}\r\n            date={post.date}\r\n            text={post.text}\r\n            likes={post.likes}\r\n            comments={post.comments}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,aAAa;AACpB,OAAOC,QAAQ,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAGtCD,SAAS,CAAC,MAAM;IACd,MAAMU,aAAa,GAAG,CACpB;MACEC,EAAE,EAAE,CAAC;MACLC,MAAM,EAAE,iCAAiC;MACzCC,QAAQ,EAAE,OAAO;MACjBC,IAAI,EAAE,YAAY;MAClBC,IAAI,EAAE,eAAe;MACrBC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC,EACD;MACEN,EAAE,EAAE,CAAC;MACLC,MAAM,EAAE,iCAAiC;MACzCC,QAAQ,EAAE,OAAO;MACjBC,IAAI,EAAE,YAAY;MAClBC,IAAI,EAAE,eAAe;MACrBC,KAAK,EAAE,CAAC;MACRC,QAAQ,EAAE;IACZ,CAAC,EACD;MACEN,EAAE,EAAE,CAAC;MACLC,MAAM,EAAE,iCAAiC;MACzCC,QAAQ,EAAE,OAAO;MACjBC,IAAI,EAAE,YAAY;MAClBC,IAAI,EAAE,eAAe;MACrBC,KAAK,EAAE,CAAC;MACRC,QAAQ,EAAE;IACZ,CAAC,CACF;IAEDR,QAAQ,CAACC,aAAa,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKa,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9Bd,OAAA;MAAKa,SAAS,EAAC,OAAO;MAAAC,QAAA,EACnBX,KAAK,CAACY,GAAG,CAACC,IAAI,iBACbhB,OAAA,CAACH,IAAI;QAEHU,MAAM,EAAES,IAAI,CAACT,MAAO;QACpBC,QAAQ,EAAEQ,IAAI,CAACR,QAAS;QACxBC,IAAI,EAAEO,IAAI,CAACP,IAAK;QAChBC,IAAI,EAAEM,IAAI,CAACN,IAAK;QAChBC,KAAK,EAAEK,IAAI,CAACL,KAAM;QAClBC,QAAQ,EAAEI,IAAI,CAACJ;MAAS,GANnBI,IAAI,CAACV,EAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOb,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CAvDID,KAAK;AAAAoB,EAAA,GAALpB,KAAK;AAyDX,eAAeA,KAAK;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}