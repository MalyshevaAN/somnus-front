{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT-PROJECTS\\\\somnus\\\\src\\\\components\\\\posts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Post from './post';\nimport './posts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    /* Здесь вы можете выполнить запрос к бэкенду для получения списка постов\r\n     и установить полученные данные в состояние `posts`\r\n     Пример получения данных с использованием fetch:\r\n    fetch('https://api.example.com/posts')\r\n      .then(response => response.json())\r\n      .then(data => setPosts(data))\r\n      .catch(error => console.log(error)); */\n    const temporaryData = [{\n      id: 1,\n      title: 'Пост 1',\n      body: 'Текст поста 1'\n    }, {\n      id: 2,\n      title: 'Пост 2',\n      body: 'Текст поста 2'\n    }, {\n      id: 3,\n      title: 'Пост 3',\n      body: 'Текст поста 3'\n    }];\n    setPosts(temporaryData);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts\",\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      title: post.title,\n      body: post.body\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","Post","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","temporaryData","id","title","body","className","children","map","post","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/REACT-PROJECTS/somnus/src/components/posts.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Post from './post';\r\nimport './posts.css'\r\n\r\nconst Posts = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    /* Здесь вы можете выполнить запрос к бэкенду для получения списка постов\r\n     и установить полученные данные в состояние `posts`\r\n     Пример получения данных с использованием fetch:\r\n    fetch('https://api.example.com/posts')\r\n      .then(response => response.json())\r\n      .then(data => setPosts(data))\r\n      .catch(error => console.log(error)); */\r\n      const temporaryData = [\r\n        { id: 1, title: 'Пост 1', body: 'Текст поста 1' },\r\n        { id: 2, title: 'Пост 2', body: 'Текст поста 2' },\r\n        { id: 3, title: 'Пост 3', body: 'Текст поста 3' },\r\n      ];\r\n  \r\n      setPosts(temporaryData);\r\n  }, []);\r\n\r\n  return (\r\n    <div className='posts'>\r\n      {posts.map(post => (\r\n        <Post key={post.id} title={post.title} body={post.body} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd;AACJ;AACA;AACA;AACA;AACA;AACA;IACM,MAAMS,aAAa,GAAG,CACpB;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,QAAQ;MAAEC,IAAI,EAAE;IAAgB,CAAC,EACjD;MAAEF,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,QAAQ;MAAEC,IAAI,EAAE;IAAgB,CAAC,EACjD;MAAEF,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,QAAQ;MAAEC,IAAI,EAAE;IAAgB,CAAC,CAClD;IAEDJ,QAAQ,CAACC,aAAa,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKS,SAAS,EAAC,OAAO;IAAAC,QAAA,EACnBP,KAAK,CAACQ,GAAG,CAACC,IAAI,iBACbZ,OAAA,CAACF,IAAI;MAAeS,KAAK,EAAEK,IAAI,CAACL,KAAM;MAACC,IAAI,EAAEI,IAAI,CAACJ;IAAK,GAA5CI,IAAI,CAACN,EAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAuC,CAC1D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACd,EAAA,CA3BID,KAAK;AAAAgB,EAAA,GAALhB,KAAK;AA6BX,eAAeA,KAAK;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}