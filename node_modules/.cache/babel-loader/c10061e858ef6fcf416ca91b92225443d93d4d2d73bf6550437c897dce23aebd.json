{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT-PROJECTS\\\\somnus\\\\src\\\\pages\\\\Main.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Header from '../components/header';\nimport Sidebar from '../components/sidebar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    fetchPosts(); // Вызываем функцию для получения списка постов при загрузке компонента\n  }, []);\n  const fetchPosts = () => {\n    /* \r\n        fetch('https://api.example.com/posts')\r\n      .then(response => response.json())\r\n       .then(data => setPosts(data))\r\n      .catch(error => console.log(error));\r\n    */\n\n    const dummyPosts = [{\n      id: 1,\n      title: 'Пост 1',\n      content: 'Содержимое поста 1'\n    }, {\n      id: 2,\n      title: 'Пост 2',\n      content: 'Содержимое поста 2'\n    }, {\n      id: 3,\n      title: 'Пост 3',\n      content: 'Содержимое поста 3'\n    }];\n    setPosts(dummyPosts);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Main, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","Header","Sidebar","jsxDEV","_jsxDEV","Fragment","_Fragment","Main","_s","posts","setPosts","fetchPosts","dummyPosts","id","title","content","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/REACT-PROJECTS/somnus/src/pages/Main.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Header from '../components/header';\r\nimport Sidebar from '../components/sidebar';\r\n\r\nconst Main = () => {\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchPosts(); // Вызываем функцию для получения списка постов при загрузке компонента\r\n    }, []);\r\n\r\n    const fetchPosts = () => {\r\n        /* \r\n            fetch('https://api.example.com/posts')\r\n          .then(response => response.json())\r\n           .then(data => setPosts(data))\r\n          .catch(error => console.log(error));\r\n        */\r\n\r\n        const dummyPosts = [\r\n            { id: 1, title: 'Пост 1', content: 'Содержимое поста 1' },\r\n            { id: 2, title: 'Пост 2', content: 'Содержимое поста 2' },\r\n            { id: 3, title: 'Пост 3', content: 'Содержимое поста 3' }\r\n        ];\r\n\r\n        setPosts(dummyPosts);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <Sidebar />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Main;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,OAAO,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZY,UAAU,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAGA,CAAA,KAAM;IACrB;AACR;AACA;AACA;AACA;AACA;;IAEQ,MAAMC,UAAU,GAAG,CACf;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAqB,CAAC,EACzD;MAAEF,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAqB,CAAC,EACzD;MAAEF,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAqB,CAAC,CAC5D;IAEDL,QAAQ,CAACE,UAAU,CAAC;EACxB,CAAC;EAED,oBACIR,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBACIZ,OAAA,CAACH,MAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVhB,OAAA,CAACF,OAAO;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACb,CAAC;AAEX,CAAC;AAACZ,EAAA,CA9BID,IAAI;AAAAc,EAAA,GAAJd,IAAI;AAgCV,eAAeA,IAAI;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}