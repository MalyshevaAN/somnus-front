{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT-PROJECTS\\\\somnus\\\\src\\\\components\\\\posts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Post from './Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // Здесь вы можете выполнить запрос к бэкенду для получения списка постов\n    // и установить полученные данные в состояние `posts`\n    // Пример получения данных с использованием fetch:\n    fetch('https://api.example.com/posts').then(response => response.json()).then(data => setPosts(data)).catch(error => console.log(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      title: post.title,\n      body: post.body\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","Post","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","fetch","then","response","json","data","catch","error","console","log","children","map","post","title","body","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/REACT-PROJECTS/somnus/src/components/posts.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Post from './Post';\r\n\r\nconst Posts = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Здесь вы можете выполнить запрос к бэкенду для получения списка постов\r\n    // и установить полученные данные в состояние `posts`\r\n    // Пример получения данных с использованием fetch:\r\n    fetch('https://api.example.com/posts')\r\n      .then(response => response.json())\r\n      .then(data => setPosts(data))\r\n      .catch(error => console.log(error));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {posts.map(post => (\r\n        <Post key={post.id} title={post.title} body={post.body} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACAS,KAAK,CAAC,+BAA+B,CAAC,CACnCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,QAAQ,CAACK,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAAc,QAAA,EACGX,KAAK,CAACY,GAAG,CAACC,IAAI,iBACbhB,OAAA,CAACF,IAAI;MAAemB,KAAK,EAAED,IAAI,CAACC,KAAM;MAACC,IAAI,EAAEF,IAAI,CAACE;IAAK,GAA5CF,IAAI,CAACG,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAuC,CAC1D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACrB,EAAA,CApBID,KAAK;AAAAuB,EAAA,GAALvB,KAAK;AAsBX,eAAeA,KAAK;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}