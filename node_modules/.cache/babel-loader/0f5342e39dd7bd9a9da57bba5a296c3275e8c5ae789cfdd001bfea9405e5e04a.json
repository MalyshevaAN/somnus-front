{"ast":null,"code":"var _jsxFileName = \"/home/nastia/javaProjects/somnus/src/components/Friends.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Friend from './Friend';\nimport './Friends.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Friends = () => {\n  _s();\n  const [friendsList, setFriendsList] = useState([]);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const fetchFriendsList = async () => {\n      try {\n        // const response = await axios.get('http://localhost:8080/user/subscriptions', {\n        //   headers: {\n        //     Authorization: `Bearer ${token}`,\n        //   },\n        // });\n        const testData = [{\n          email: 'friend1@example.com',\n          userName: 'Друг 1'\n        }];\n        console.log(response.data);\n        setFriendsList(response.data);\n      } catch (error) {\n        console.error('Ошибка при получении списка друзей:', error);\n      }\n    };\n    fetchFriendsList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"FriendsContainer\",\n    children: friendsList.map(friend => /*#__PURE__*/_jsxDEV(Friend, {\n      email: friend.email,\n      userName: friend.firstName + \" \" + friend.lastName\n    }, friend.email, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Friends, \"Kk6TWZvbs6W0TJx9L+dosFS//jk=\");\n_c = Friends;\nexport default Friends;\nvar _c;\n$RefreshReg$(_c, \"Friends\");","map":{"version":3,"names":["React","useEffect","useState","axios","Friend","jsxDEV","_jsxDEV","Friends","_s","friendsList","setFriendsList","token","localStorage","getItem","fetchFriendsList","testData","email","userName","console","log","response","data","error","className","children","map","friend","firstName","lastName","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/nastia/javaProjects/somnus/src/components/Friends.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Friend from './Friend';\nimport './Friends.css';\n\nconst Friends = () => {\n  const [friendsList, setFriendsList] = useState([]);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    const fetchFriendsList = async () => {\n      try {\n        // const response = await axios.get('http://localhost:8080/user/subscriptions', {\n        //   headers: {\n        //     Authorization: `Bearer ${token}`,\n        //   },\n        // });\n        const testData = [\n            { email: 'friend1@example.com', userName: 'Друг 1' },\n          ];\n        console.log(response.data)\n        setFriendsList(response.data);\n      } catch (error) {\n        console.error('Ошибка при получении списка друзей:', error);\n      }\n    };\n    fetchFriendsList();\n  }, []);\n\n  return (\n    <div className='FriendsContainer'>\n      {friendsList.map((friend) => (\n        <Friend key={friend.email} email={friend.email} userName={friend.firstName + \" \" + friend.lastName} />\n      ))}\n    </div>\n  );\n};\n\nexport default Friends;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElDD,SAAS,CAAC,MAAM;IACd,MAAMU,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF;QACA;QACA;QACA;QACA;QACA,MAAMC,QAAQ,GAAG,CACb;UAAEC,KAAK,EAAE,qBAAqB;UAAEC,QAAQ,EAAE;QAAS,CAAC,CACrD;QACHC,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACC,IAAI,CAAC;QAC1BX,cAAc,CAACU,QAAQ,CAACC,IAAI,CAAC;MAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC7D;IACF,CAAC;IACDR,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAKiB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,EAC9Bf,WAAW,CAACgB,GAAG,CAAEC,MAAM,iBACtBpB,OAAA,CAACF,MAAM;MAAoBY,KAAK,EAAEU,MAAM,CAACV,KAAM;MAACC,QAAQ,EAAES,MAAM,CAACC,SAAS,GAAG,GAAG,GAAGD,MAAM,CAACE;IAAS,GAAtFF,MAAM,CAACV,KAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA4E,CACtG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACxB,EAAA,CA/BID,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AAiCb,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}