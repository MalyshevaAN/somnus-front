{"ast":null,"code":"var _jsxFileName = \"/home/nastia/javaProjects/somnus/src/components/Friends.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Friend from './Friend';\nimport './Friends.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Friends = () => {\n  _s();\n  const [friendsList, setFriendsList] = useState([]);\n  useEffect(() => {\n    const fetchFriendsList = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/friends');\n        // const testData = [\n        //     { email: 'friend1@example.com', userName: 'Друг 1' },\n        //     { email: 'friend2@example.com', userName: 'Друг 2' },\n        //     { email: 'friend3@example.com', userName: 'Друг 3' },\n        //     { email: 'friend3@example.com', userName: 'Друг 3' },\n        //     { email: 'friend3@example.com', userName: 'Друг 3' },\n        //     { email: 'friend3@example.com', userName: 'Друг 3' },\n        //   ];\n        setFriendsList(testData);\n      } catch (error) {\n        console.error('Ошибка при получении списка друзей:', error);\n      }\n    };\n    fetchFriendsList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"FriendsContainer\",\n    children: friendsList.map(friend => /*#__PURE__*/_jsxDEV(Friend, {\n      email: friend.email,\n      userName: friend.userName\n    }, friend.email, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Friends, \"Kk6TWZvbs6W0TJx9L+dosFS//jk=\");\n_c = Friends;\nexport default Friends;\nvar _c;\n$RefreshReg$(_c, \"Friends\");","map":{"version":3,"names":["React","useEffect","useState","axios","Friend","jsxDEV","_jsxDEV","Friends","_s","friendsList","setFriendsList","fetchFriendsList","response","get","testData","error","console","className","children","map","friend","email","userName","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/nastia/javaProjects/somnus/src/components/Friends.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Friend from './Friend';\nimport './Friends.css';\n\nconst Friends = () => {\n  const [friendsList, setFriendsList] = useState([]);\n\n  useEffect(() => {\n    const fetchFriendsList = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/friends');\n        // const testData = [\n        //     { email: 'friend1@example.com', userName: 'Друг 1' },\n        //     { email: 'friend2@example.com', userName: 'Друг 2' },\n        //     { email: 'friend3@example.com', userName: 'Друг 3' },\n        //     { email: 'friend3@example.com', userName: 'Друг 3' },\n        //     { email: 'friend3@example.com', userName: 'Друг 3' },\n        //     { email: 'friend3@example.com', userName: 'Друг 3' },\n        //   ];\n        setFriendsList(testData);\n      } catch (error) {\n        console.error('Ошибка при получении списка друзей:', error);\n      }\n    };\n    fetchFriendsList();\n  }, []);\n\n  return (\n    <div className='FriendsContainer'>\n      {friendsList.map((friend) => (\n        <Friend key={friend.email} email={friend.email} userName={friend.userName} />\n      ))}\n    </div>\n  );\n};\n\nexport default Friends;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElDD,SAAS,CAAC,MAAM;IACd,MAAMU,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,+BAA+B,CAAC;QACjE;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACAH,cAAc,CAACI,QAAQ,CAAC;MAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC7D;IACF,CAAC;IACDJ,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKW,SAAS,EAAC,kBAAkB;IAAAC,QAAA,EAC9BT,WAAW,CAACU,GAAG,CAAEC,MAAM,iBACtBd,OAAA,CAACF,MAAM;MAAoBiB,KAAK,EAAED,MAAM,CAACC,KAAM;MAACC,QAAQ,EAAEF,MAAM,CAACE;IAAS,GAA7DF,MAAM,CAACC,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAmD,CAC7E;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAClB,EAAA,CA9BID,OAAO;AAAAoB,EAAA,GAAPpB,OAAO;AAgCb,eAAeA,OAAO;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}