{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT-PROJECTS\\\\somnus\\\\src\\\\components\\\\stars.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport starImage from './star.png'; // Путь к изображению\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StarsContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 2;\n`;\n_c = StarsContainer;\nconst Star = styled.img`\n  position: absolute;\n  width: 40px; \n  height: 40px; \n  opacity: 1; \n  border-radius: 50%;\n`;\n_c2 = Star;\nconst generateRandomRotation = () => {\n  return `rotate(${Math.random() * 360}deg)`;\n};\nconst generateRandomPosition = () => {\n  const x = Math.random() * 100;\n  const y = Math.random() * 100;\n  return `translate(${x}%, ${y}%)`;\n};\nconst StarsBackground = () => {\n  _s();\n  const [stars, setStars] = useState([]);\n  useEffect(() => {\n    const numStars = 100;\n    const generatedStars = [];\n    for (let i = 0; i < numStars; i++) {\n      generatedStars.push({\n        rotation: generateRandomRotation(),\n        position: generateRandomPosition()\n      });\n    }\n    setStars(generatedStars);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(StarsContainer, {\n    children: stars.map((star, index) => /*#__PURE__*/_jsxDEV(Star, {\n      src: starImage,\n      style: {\n        transform: `${star.rotation} ${star.position}`\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(StarsBackground, \"MpMl4xT356TDKICdFBbojt4n5zM=\");\n_c3 = StarsBackground;\nexport default StarsBackground;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StarsContainer\");\n$RefreshReg$(_c2, \"Star\");\n$RefreshReg$(_c3, \"StarsBackground\");","map":{"version":3,"names":["React","useEffect","useState","styled","starImage","jsxDEV","_jsxDEV","StarsContainer","div","_c","Star","img","_c2","generateRandomRotation","Math","random","generateRandomPosition","x","y","StarsBackground","_s","stars","setStars","numStars","generatedStars","i","push","rotation","position","children","map","star","index","src","style","transform","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["D:/REACT-PROJECTS/somnus/src/components/stars.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport starImage from './star.png'; // Путь к изображению\r\n\r\nconst StarsContainer = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 2;\r\n`;\r\n\r\nconst Star = styled.img`\r\n  position: absolute;\r\n  width: 40px; \r\n  height: 40px; \r\n  opacity: 1; \r\n  border-radius: 50%;\r\n`;\r\n\r\nconst generateRandomRotation = () => {\r\n  return `rotate(${Math.random() * 360}deg)`;\r\n};\r\n\r\nconst generateRandomPosition = () => {\r\n  const x = Math.random() * 100;\r\n  const y = Math.random() * 100;\r\n  return `translate(${x}%, ${y}%)`;\r\n};\r\n\r\nconst StarsBackground = () => {\r\n  const [stars, setStars] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const numStars = 100;\r\n    const generatedStars = [];\r\n\r\n    for (let i = 0; i < numStars; i++) {\r\n      generatedStars.push({\r\n        rotation: generateRandomRotation(),\r\n        position: generateRandomPosition(),\r\n      });\r\n    }\r\n\r\n    setStars(generatedStars);\r\n  }, []);\r\n\r\n  return (\r\n    <StarsContainer>\r\n      {stars.map((star, index) => (\r\n        <Star\r\n          key={index}\r\n          src={starImage}\r\n          style={{\r\n            transform: `${star.rotation} ${star.position}`,\r\n          }}\r\n        />\r\n      ))}\r\n    </StarsContainer>\r\n  );\r\n};\r\n\r\nexport default StarsBackground;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,SAAS,MAAM,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,cAAc,GAAGJ,MAAM,CAACK,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAPIF,cAAc;AASpB,MAAMG,IAAI,GAAGP,MAAM,CAACQ,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GANIF,IAAI;AAQV,MAAMG,sBAAsB,GAAGA,CAAA,KAAM;EACnC,OAAQ,UAASC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAI,MAAK;AAC5C,CAAC;AAED,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EACnC,MAAMC,CAAC,GAAGH,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;EAC7B,MAAMG,CAAC,GAAGJ,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;EAC7B,OAAQ,aAAYE,CAAE,MAAKC,CAAE,IAAG;AAClC,CAAC;AAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMsB,QAAQ,GAAG,GAAG;IACpB,MAAMC,cAAc,GAAG,EAAE;IAEzB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,QAAQ,EAAEE,CAAC,EAAE,EAAE;MACjCD,cAAc,CAACE,IAAI,CAAC;QAClBC,QAAQ,EAAEd,sBAAsB,CAAC,CAAC;QAClCe,QAAQ,EAAEZ,sBAAsB,CAAC;MACnC,CAAC,CAAC;IACJ;IAEAM,QAAQ,CAACE,cAAc,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElB,OAAA,CAACC,cAAc;IAAAsB,QAAA,EACZR,KAAK,CAACS,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrB1B,OAAA,CAACI,IAAI;MAEHuB,GAAG,EAAE7B,SAAU;MACf8B,KAAK,EAAE;QACLC,SAAS,EAAG,GAAEJ,IAAI,CAACJ,QAAS,IAAGI,IAAI,CAACH,QAAS;MAC/C;IAAE,GAJGI,KAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKX,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAErB,CAAC;AAACnB,EAAA,CA9BID,eAAe;AAAAqB,GAAA,GAAfrB,eAAe;AAgCrB,eAAeA,eAAe;AAAC,IAAAV,EAAA,EAAAG,GAAA,EAAA4B,GAAA;AAAAC,YAAA,CAAAhC,EAAA;AAAAgC,YAAA,CAAA7B,GAAA;AAAA6B,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}